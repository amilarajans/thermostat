<?xml version='1.0'?>
<project name="thermostat" default="all">
    <description>
        Build the thermostat project
    </description>

    <property name="config.dir" location="config" />
    <property name="src.dir" location="src" />
    <property name="scripts.dir" location="scripts" />
    <property name="build.dir" location="build" />
    <property name="classes.dir" location="${build.dir}/classes" />
    <property name="dist.dir" location="dist" />
    <property name="javadoc.dir" location="${dist.dir}/doc/javadoc" />

    <property name="app-info.file" value="app-info.properties" />

    <property name="test.src.dir" location="test" />
    <property name="test.build.dir" location="${build.dir}/test" />
    <property name="reports.dir" location="reports" />

    <property name="common.jar" location="${dist.dir}/lib/thermostat-common.jar" />
    <property name="agent.jar" location="${dist.dir}/lib/thermostat-agent.jar" />
    <property name="client-gui.jar" location="${dist.dir}/lib/thermostat-client-gui.jar" />

    <property name="thermostat.path.prefix" value="com/redhat/thermostat/" />
    <property name="common.path.prefix" value="${thermostat.path.prefix}common/" />
    <property name="agent.path.prefix" value="${thermostat.path.prefix}agent/" />
    <property name="backend.path.prefix" value="${thermostat.path.prefix}backend/" />
    <property name="client-gui.path.prefix" value="${thermostat.path.prefix}client/" />
    <property name="agent-main-class" value="com.redhat.thermostat.agent.Main" />
    <property name="client-gui-main-class" value="com.redhat.thermostat.client.Main" />

    <property name="junit.out.xml.dir" location="${reports.dir}/junit/xml" />
    <property name="junit.out.html.dir" location="${reports.dir}/junit/html" />

    <!-- allow users/packagers to change default paths and other parameters -->
    <property file="ant-build.properties" />

    <path id="agent.classpath" >
        <pathelement path="${mongo.jar}" />
        <pathelement path="${bson.jar}" />
        <pathelement path="${tools.jar}" />
    </path>

    <path id="client-gui.classpath">
        <pathelement path="${jcommon.jar}" />
        <pathelement path="${jfreechart.jar}" />
        <pathelement path="${mongo.jar}" />
    </path>

    <path id="test.classpath">
        <pathelement location="${agent.jar}" />
        <pathelement location="${common.jar}" />
    </path>

    <target name="debug">
        <echoproperties/>
    </target>

    <target name="build-common-classes">
        <mkdir dir="${classes.dir}"/>
        <javac srcdir="${src.dir}" destdir="${classes.dir}" debug="true">
            <include name="${common.path.prefix}**" />
        </javac>
    </target>

    <target name="common-jar" depends="build-common-classes,replace-properties">
        <mkdir dir="${dist.dir}" />
        <jar destfile="${common.jar}" duplicate="fail">
            <fileset dir="${classes.dir}/">
                <include name="${common.path.prefix}**/*.class" />
                <include name="${common.path.prefix}**/*.properties" />
            </fileset>
         </jar>
    </target>

    <target name="build-agent-classes" depends="build-common-classes">
        <mkdir dir="${classes.dir}"/>
        <javac srcdir="${src.dir}" destdir="${classes.dir}" debug="true">
            <include name="${agent.path.prefix}**" />
            <classpath>
                <path location="${classes.dir}" />
                <path refid="agent.classpath" />
            </classpath>
        </javac>
    </target>

    <target name="agent-jar" depends="build-agent-classes,replace-properties">
        <mkdir dir="${dist.dir}" />
        <jar destfile="${agent.jar}" duplicate="fail">
            <fileset dir="${classes.dir}">
                <include name="${agent.path.prefix}**/*.class" />
                <include name="${backend.path.prefix}**/*.class" />
                <include name="${agent.path.prefix}**/*.properties" />
                <include name="${backend.path.prefix}**/*.properties" />
            </fileset>
         </jar>
    </target>

    <target name="build-client-gui-classes" depends="build-common-classes">
        <mkdir dir="${classes.dir}"/>
        <javac srcdir="${src.dir}" destdir="${classes.dir}" debug="true">
            <include name="${client.path.prefix}**" />
            <classpath>
                <path location="${classes.dir}" />
                <path refid="client-gui.classpath" />
            </classpath>
        </javac>
    </target>

    <target name="client-gui-jar" depends="build-client-gui-classes">
        <mkdir dir="${dist.dir}" />
        <jar destfile="${client-gui.jar}" duplicate="fail">
            <fileset dir="${classes.dir}">
                <include name="${client.path.prefix}**/*.class" />
                <include name="${client.path.prefix}**/*.properties" />
            </fileset>
         </jar>
    </target>

    <target name="replace-scripts">
    	<property name="scripts.dest" location="${dist.dir}/scripts" />
    	<mkdir dir="${scripts.dest}" />
        <copy todir="${scripts.dest}">
            <fileset dir="${scripts.dir}" />
            <filterset>
                <filter token="JAVA_DIR" value="${java.dir}" />
                <filter token="JAVA_HOME" value="${java.home}" />
                <filter token="AGENT_CLASSPATH" value="${agent.classpath}" />
                <filter token="AGENT_PROPERTIES" value="${agent.properties}" />
                <filter token="CLIENT_GUI_CLASSPATH" value="${client-gui.classpath}" />
                <filter token="CONFIG_DIR" value="${config.dir}" />
            </filterset>
        </copy>
        <chmod perm="a+x" type="file">
        	<fileset dir="${scripts.dest}" />
        </chmod>
    </target>

    <target name="replace-properties">
        <copy todir="${classes.dir}">
            <fileset dir="${src.dir}">
                <include name="**/*.properties" />
            </fileset>
        	<filterset>
                <filter token="DATE" value="${appinfo.releasedate}" />
                <filter token="VERSION" value="{appinfo.version}" />
        	</filterset>
        </copy>
    </target>

    <target name="replace-config">
        <property name="config.dest" location="${dist.dir}/config" />
        <mkdir dir="${config.dest}" />
        <copy todir="${config.dest}">
            <fileset dir="${config.dir}" />
            <filterset>
        		<!-- FIXME this works only for the case of running things from ${dist.dir}.
        		     If the dir is copied to some other system dir (aka 'installed') this
        		     breaks.  Probably need an ant install target to make this work properly
        		 -->
        		<filter token="THERM_INSTALL_DIR" value="${dist.dir}" />
            </filterset>
        </copy>
    </target>

    <target name="build-all"
            depends="common-jar,agent-jar,client-gui-jar,replace-scripts,replace-config"
            description="build all jars" />

    <target name="javadoc" description="generate javadoc">
        <javadoc destdir="${javadoc.dir}">
            <fileset dir="${src.dir}" />
        </javadoc>
    </target>

    <target name="dist" depends="build-all,javadoc" description="build everything">
    </target>

    <target name="all"
            depends="dist"
            description="build everything"
            />

    <target name="build-test">
        <mkdir dir="${test.build.dir}" />
        <javac srcdir="${test.src.dir}" destdir="${test.build.dir}" debug="true">
            <classpath>
                <path refid="test.classpath" />
            </classpath>
        </javac>
    </target>

    <target name="run-test" depends="build-all,build-test">
        <mkdir dir="${junit.out.xml.dir}" />
        <junit printsummary="yes" haltonfailure="no">
            <classpath>
                <path refid="test.classpath" />
                <path location="${test.build.dir}" />
            </classpath>
            <formatter type="xml" />
            <batchtest todir="${junit.out.xml.dir}">
                <fileset dir="${test.build.dir}" includes="**/*Test.class"/>
            </batchtest>
        </junit>
    </target>

    <target name="generate-test-report" depends="run-test">
        <junitreport>
            <fileset dir="${junit.out.xml.dir}">
                <include name="TEST-*.xml"/>
            </fileset>
            <report format="frames" todir="${junit.out.html.dir}" />
        </junitreport>
    </target>

    <target name="check" description="run test" depends="generate-test-report" />

    <target name="clean" description="delete all generated files" >
        <delete dir="${build.dir}" />
        <delete dir="${dist.dir}" />
        <delete dir="${reports.dir}" />
        <delete file="TESTS-TestSuites.xml" />
    </target>

    <target name="run-agent-local" depends="agent-jar,common-jar">
        <java fork="yes" classname="${agent-main-class}">
            <classpath>
                <path refid="agent.classpath" />
                <path location="${agent.jar}" />
                <path location="${common.jar}" />
            </classpath>
            <arg value="--local"/>
        </java>
    </target>

    <target name="run-client-gui" depends="client-gui-jar,common-jar">
        <java fork="yes" classname="${client-gui-main-class}">
            <classpath>
                <path refid="client-gui.classpath" />
                <path location="${client-gui.jar}" />
                <path location="${common.jar}" />
            </classpath>
        </java>
    </target>
</project>
